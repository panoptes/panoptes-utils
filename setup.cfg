[metadata]
name = panoptes-utils
description = Astronomical utilities for PANOPTES
author = PANOPTES Team
author_email = developers@projectpanoptes.org
license = mit
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8
url = https://github.com/panoptes/panoptes-utils
project_urls =
    Documentation = https://panoptes-utils.readthedocs.io
    POCS Documentation = https://pocs.readthedocs.io
    Project PANOPTES = https://www.projectpanoptes.org
    Forum = https://forum.projectpanoptes.org
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = linux
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Environment :: Console
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: POSIX
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3 :: Only
    Topic :: Scientific/Engineering :: Astronomy
    Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
include_package_data = True
package_dir =
    =src
scripts =
    bin/cr2-to-jpg

# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
# Add here dependencies of your project (semicolon/line-separated), e.g.
install_requires =
    importlib-metadata; python_version<"3.8"
    astropy
    click
    click-spinner
    colorama
    Deprecated
    loguru
    numpy>=1.19
    pyserial>=3.4
    python-dateutil
    requests
    ruamel.yaml
    typer
# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
python_requires = >=3.7

packages = find_namespace:
[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# e.g. `pip install panoptes-utils[social]` like:
config =
    Flask
    PyYAML
    gevent
    python-dateutil
    requests
    scalpl
docs =
    sphinx_rtd_theme
images =
    matplotlib
    photutils
    pillow>=9.1.1
    scipy
testing =
    coverage
    pycodestyle
    pytest
    pytest-cov
    pytest-doctestplus
    pytest-remotedata>=0.3.1
    python-dotenv
social =
    requests
    tweepy

[options.entry_points]
# Add here console scripts like:
console_scripts =
    panoptes-config-server = panoptes.utils.config.cli:config_server_cli
    panoptes-utils = panoptes.utils.cli.main:app

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
extras = True

[tool:pytest]
addopts =
    --cov panoptes
    --cov-report term-missing:skip-covered
    --cov-report xml:build/coverage.xml
    --strict-markers
    --doctest-modules
    --test-databases all
    --strict-markers
    -vv
    -ra
norecursedirs =
    dist
    build
    .tox
testpaths = tests src
doctest_optionflags = ELLIPSIS NORMALIZE_WHITESPACE ALLOW_UNICODE IGNORE_EXCEPTION_DETAIL
filterwarnings =
    ignore:elementwise == comparison failed:DeprecationWarning
    ignore::pytest.PytestDeprecationWarning
doctest_plus = enabled
markers =
    astrometry: tests that require astrometry.net (i.e. solve-field).
    slow: marks tests as slow (deselect with '-m "not slow"').

[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[flake8]
# Some sane defaults for the code style checker flake8
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pycodestyle]
max-line-length = 100

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
# Have to re-enable the standard pragma
    pragma: no cover
    noqa

# Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

# Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

# Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

show_missing = True
ignore_errors = True

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.2.3
package = utils
extensions =
    namespace
    no_skeleton
namespace = panoptes
